#!/bin/bash
#set -e	#### Terminating the script if any command exited with a nonzero exit status
set -u	#### prevents the error by aborting the script if a variableâ€™s value is unset
set -o pipefail 	#### check on the p398 of book Bioinformatics Data Skills.
### functions.sh contains all modules and functions necessary in this pipeline, has to be together with run_main.sh
source ./functions.sh

## USAGE:
#	nohup bash run_main.sh "Process_NAME" > out.log &
########################################################################
## 02/22/2019
## By Xiang Li,
## lux@gwu.edu
## Peng's Lab
## Version.beta
########################################################################

########################################################################
  #  means NEED MODIFICATION. "VERY IMPORTANT INFORMATION"
  ## means Title_level 1.
 ### means Title_level 2.
#### means comment.
########################################################################

## Pickup a NAME for this one time pipeline.
Process_NAME=${1}
echo "-----------------------------------------------------------------"

echo "Import functions.sh Completed!"
echo "Your Pipeline Named ${Process_NAME} start at `date`"
Start_Date=`date`
echo "-----------------------------------------------------------------"
#			NEED MODIFICATION FOR DIFFERENT PROJECT
########################################################################
## GLOBAL VARIABLES
########################################################################
### INPUT DIRECTORY
__INPUT_PATH=/home/xli/Raw_Data/Paul/GSE89497/fastq
### Output DIRECTORY
__OUTPUT_PATH=/home/xli/Raw_Data/Paul/GSE89497
__INPUT_SAMPLE_SET=(
SRR4895395
SRR4895396
SRR4895397
SRR4895398
SRR4895399
SRR4895400
SRR4895401
SRR4895402
SRR4895403
SRR4895404
SRR4895405
SRR4895406
SRR4895407
SRR4895408
SRR4895409
SRR4895410
SRR4895411
SRR4895412
SRR4895413
SRR4895414
SRR4895415
SRR4895416
SRR4895417
SRR4895418
SRR4895419
SRR4895420
SRR4895421
SRR4895422
SRR4895423
SRR4895424
SRR4895425
SRR4895426
SRR4895427
SRR4895428
SRR4895429
SRR4895430
SRR4895431
SRR4895432
SRR4895433
SRR4895434
SRR4895435
SRR4895436
SRR4895437
SRR4895438
SRR4895439
SRR4895440
SRR4895441
SRR4895442
SRR4895443
SRR4895444
SRR4895445
SRR4895446
SRR4895447
SRR4895448
SRR4895449
SRR4895450
SRR4895451
SRR4895452
SRR4895453
SRR4895454
SRR4895455
SRR4895456
SRR4895457
SRR4895458
SRR4895459
SRR4895460
SRR4895461
SRR4895462
SRR4895463
SRR4895464
SRR4895465
SRR4895466
SRR4895467
SRR4895468
SRR4895469
SRR4895470
SRR4895471
SRR4895472
SRR4895473
SRR4895474
SRR4895475
SRR4895476
SRR4895477
SRR4895478
SRR4895479
SRR4895480
SRR4895481
SRR4895482
SRR4895483
SRR4895484
SRR4895485
SRR4895486
SRR4895487
SRR4895488
SRR4895489
SRR4895490
SRR4895491
SRR4895492
SRR4895493
SRR4895494
SRR4895495
SRR4895496
SRR4895497
SRR4895498
SRR4895499
SRR4895500
SRR4895501
SRR4895502
SRR4895503
SRR4895504
SRR4895505
SRR4895506
SRR4895507
SRR4895508
SRR4895509
SRR4895510
SRR4895511
SRR4895512
SRR4895513
SRR4895514
SRR4895515
SRR4895516
SRR4895517
SRR4895518
SRR4895519
SRR4895520
SRR4895521
SRR4895522
SRR4895523
SRR4895524
SRR4895525
SRR4895526
SRR4895527
SRR4895528
SRR4895529
SRR4895530
SRR4895531
SRR4895532
SRR4895533
SRR4895534
SRR4895535
SRR4895536
SRR4895537
SRR4895538
SRR4895539
SRR4895540
SRR4895541
SRR4895542
SRR4895543
SRR4895544
SRR4895545
SRR4895546
SRR4895547
SRR4895548
SRR4895549
SRR4895550
SRR4895551
SRR4895552
SRR4895553
SRR4895554
SRR4895555
SRR4895556
SRR4895557
SRR4895558
SRR4895559
SRR4895560
SRR4895561
SRR4895562
SRR4895563
SRR4895564
SRR4895565
SRR4895566
SRR4895567
SRR4895568
SRR4895569
SRR4895570
SRR4895571
SRR4895572
SRR4895573
SRR4895574
SRR4895575
SRR4895576
SRR4895577
SRR4895578
SRR4895579
SRR4895580
SRR4895581
SRR4895582
SRR4895583
SRR4895584
SRR4895585
SRR4895586
SRR4895587
SRR4895588
SRR4895589
SRR4895590
SRR4895591
SRR4895592
SRR4895593
SRR4895594
SRR4895595
SRR4895596
SRR4895597
SRR4895598
SRR4895599
SRR4895600
SRR4895601
SRR4895602
SRR4895603
SRR4895604
SRR4895605
SRR4895606
SRR4895607
SRR4895608
SRR4895609
SRR4895610
SRR4895611
SRR4895612
SRR4895613
SRR4895614
SRR4895615
SRR4895616
SRR4895617
SRR4895618
SRR4895619
SRR4895620
SRR4895621
SRR4895622
SRR4895623
SRR4895624
SRR4895625
SRR4895626
SRR4895627
SRR4895628
SRR4895629
SRR4895630
SRR4895631
SRR4895632
SRR4895633
SRR4895634
SRR4895635
SRR4895636
SRR4895637
SRR4895638
SRR4895639
SRR4895640
SRR4895641
SRR4895642
SRR4895643
SRR4895644
SRR4895645
SRR4895646
SRR4895647
SRR4895648
SRR4895649
SRR4895650
SRR4895651
SRR4895652
SRR4895653
SRR4895654
SRR4895655
SRR4895656
SRR4895657
SRR4895658
SRR4895659
SRR4895660
SRR4895661
SRR4895662
SRR4895663
SRR4895664
SRR4895665
SRR4895666
SRR4895667
SRR4895668
SRR4895669
SRR4895670
SRR4895671
SRR4895672
SRR4895673
SRR4895674
SRR4895675
SRR4895676
SRR4895677
SRR4895678
SRR4895679
SRR4895680
SRR4895681
SRR4895682
SRR4895683
SRR4895684
SRR4895685
SRR4895686
SRR4895687
SRR4895688
SRR4895689
SRR4895690
SRR4895691
SRR4895692
SRR4895693
SRR4895694
SRR4895695
SRR4895696
SRR4895697
SRR4895698
SRR4895699
SRR4895700
SRR4895701
SRR4895702
SRR4895703
SRR4895704
SRR4895705
SRR4895706
SRR4895707
SRR4895708
SRR4895709
SRR4895710
SRR4895711
SRR4895712
SRR4895713
SRR4895714
SRR4895715
SRR4895716
SRR4895717
SRR4895718
SRR4895719
SRR4895720
SRR4895721
SRR4895722
SRR4895723
SRR4895724
SRR4895725
SRR4895726
SRR4895727
SRR4895728
SRR4895729
SRR4895730
SRR4895731
SRR4895732
SRR4895733
SRR4895734
SRR4895735
SRR4895736
SRR4895737
SRR4895738
SRR4895739
SRR4895740
SRR4895741
SRR4895742
SRR4895743
SRR4895744
SRR4895745
SRR4895746
SRR4895747
SRR4895748
SRR4895749
SRR4895750
SRR4895751
SRR4895752
SRR4895753
SRR4895754
SRR4895755
SRR4895756
SRR4895757
SRR4895758
SRR4895759
SRR4895760
SRR4895761
SRR4895762
SRR4895763
SRR4895764
SRR4895765
SRR4895766
SRR4895767
SRR4895768
SRR4895769
SRR4895770
SRR4895771
SRR4895772
SRR4895773
SRR4895774
SRR4895775
SRR4895776
SRR4895777
SRR4895778
SRR4895779
SRR4895780
SRR4895781
SRR4895782
SRR4895783
SRR4895784
SRR4895785
SRR4895786
SRR4895787
SRR4895788
SRR4895789
SRR4895790
SRR4895791
SRR4895792
SRR4895793
SRR4895794
SRR4895795
SRR4895796
SRR4895797
SRR4895798
SRR4895799
SRR4895800
SRR4895801
SRR4895802
SRR4895803
SRR4895804
SRR4895805
SRR4895806
SRR4895807
SRR4895808
SRR4895809
SRR4895810
SRR4895811
SRR4895812
SRR4895813
SRR4895814
SRR4895815
SRR4895816
SRR4895817
SRR4895818
SRR4895819
SRR4895820
SRR4895821
SRR4895822
SRR4895823
SRR4895824
SRR4895825
SRR4895826
SRR4895827
SRR4895828
SRR4895829
SRR4895830
SRR4895831
SRR4895832
SRR4895833
SRR4895834
SRR4895835
SRR4895836
SRR4895837
SRR4895838
SRR4895839
SRR4895840
SRR4895841
SRR4895842
SRR4895843
SRR4895844
SRR4895845
SRR4895846
SRR4895847
SRR4895848
SRR4895849
SRR4895850
SRR4895851
SRR4895852
SRR4895853
SRR4895854
SRR4895855
SRR4895856
SRR4895857
SRR4895858
SRR4895859
SRR4895860
SRR4895861
SRR4895862
SRR4895863
SRR4895864
SRR4895865
SRR4895866
SRR4895867
SRR4895868
SRR4895869
SRR4895870
SRR4895871
SRR4895872
SRR4895873
SRR4895874
SRR4895875
SRR4895876
SRR4895877
SRR4895878
SRR4895879
SRR4895880
SRR4895881
SRR4895882
SRR4895883
SRR4895884
SRR4895885
SRR4895886
SRR4895887
SRR4895888
SRR4895889
SRR4895890
SRR4895891
SRR4895892
SRR4895893
SRR4895894
SRR4895895
SRR4895896
SRR4895897
SRR4895898
SRR4895899
SRR4895900
SRR4895901
SRR4895902
SRR4895903
SRR4895904
SRR4895905
SRR4895906
SRR4895907
SRR4895908
SRR4895909
SRR4895910
SRR4895911
SRR4895912
SRR4895913
SRR4895914
SRR4895915
SRR4895916
SRR4895917
SRR4895918
SRR4895919
SRR4895920
SRR4895921
SRR4895922
SRR4895923
SRR4895924
SRR4895925
SRR4895926
SRR4895927
SRR4895928
SRR4895929
SRR4895930
SRR4895931
SRR4895932
SRR4895933
SRR4895934
SRR4895935
SRR4895936
SRR4895937
SRR4895938
SRR4895939
SRR4895940
SRR4895941
SRR4895942
SRR4895943
SRR4895944
SRR4895945
SRR4895946
SRR4895947
SRR4895948
SRR4895949
SRR4895950
SRR4895951
SRR4895952
SRR4895953
SRR4895954
SRR4895955
SRR4895956
SRR4895957
SRR4895958
SRR4895959
SRR4895960
SRR4895961
SRR4895962
SRR4895963
SRR4895964
SRR4895965
SRR4895966
SRR4895967
SRR4895968
SRR4895969
SRR4895970
SRR4895971
SRR4895972
SRR4895973
SRR4895974
SRR4895975
SRR4895976
SRR4895977
SRR4895978
SRR4895979
SRR4895980
SRR4895981
SRR4895982
SRR4895983
SRR4895984
SRR4895985
SRR4895986
SRR4895987
SRR4895988
SRR4895989
SRR4895990
SRR4895991
SRR4895992
SRR4895993
SRR4895994
SRR4895995
SRR4895996
SRR4895997
SRR4895998
SRR4895999
SRR4896000
SRR4896001
SRR4896002
SRR4896003
SRR4896004
SRR4896005
SRR4896006
SRR4896007
SRR4896008
SRR4896009
SRR4896010
SRR4896011
SRR4896012
SRR4896013
SRR4896014
SRR4896015
SRR4896016
SRR4896017
SRR4896018
SRR4896019
SRR4896020
SRR4896021
SRR4896022
SRR4896023
SRR4896024
SRR4896025
SRR4896026
SRR4896027
SRR4896028
SRR4896029
SRR4896030
SRR4896031
SRR4896032
SRR4896033
SRR4896034
SRR4896035
SRR4896036
SRR4896037
SRR4896038
SRR4896039
SRR4896040
SRR4896041
SRR4896042
SRR4896043
SRR4896044
SRR4896045
SRR4896046
SRR4896047
SRR4896048
SRR4896049
SRR4896050
SRR4896051
SRR4896052
SRR4896053
SRR4896054
SRR4896055
SRR4896056
SRR4896057
SRR4896058
SRR4896059
SRR4896060
SRR4896061
SRR4896062
SRR4896063
SRR4896064
SRR4896065
SRR4896066
SRR4896067
SRR4896068
SRR4896069
SRR4896070
SRR4896071
SRR4896072
SRR4896073
SRR4896074
SRR4896075
SRR4896076
SRR4896077
SRR4896078
SRR4896079
SRR4896080
SRR4896081
SRR4896082
SRR4896083
SRR4896084
SRR4896085
SRR4896086
SRR4896087
SRR4896088
SRR4896089
SRR4896090
SRR4896091
SRR4896092
SRR4896093
SRR4896094
SRR4896095
SRR4896096
SRR4896097
SRR4896098
SRR4896099
SRR4896100
SRR4896101
SRR4896102
SRR4896103
SRR4896104
SRR4896105
SRR4896106
SRR4896107
SRR4896108
SRR4896109
SRR4896110
SRR4896111
SRR4896112
SRR4896113
SRR4896114
SRR4896115
SRR4896116
SRR4896117
SRR4896118
SRR4896119
SRR4896120
SRR4896121
SRR4896122
SRR4896123
SRR4896124
SRR4896125
SRR4896126
SRR4896127
SRR4896128
SRR4896129
SRR4896130
SRR4896131
SRR4896132
SRR4896133
SRR4896134
SRR4896135
SRR4896136
SRR4896137
SRR4896138
SRR4896139
SRR4896140
SRR4896141
SRR4896142
SRR4896143
SRR4896144
SRR4896145
SRR4896146
SRR7458449
SRR7458450
SRR7458451
SRR7458452
SRR7458453
SRR7458454
SRR7458455
SRR7458456
SRR7458457
SRR7458458
SRR7458459
SRR7458460
)
#### Saving DIR Check and Create
DIR_CHECK_CREATE ${__OUTPUT_PATH} ${__INPUT_PATH}
########################################################################
#### Function of Email Alert, yes or no?
FUNC_CHOOSE_EMAIL_ALERT
Alert_email=$?
##	MAIN BODY
########################################################################
main() {
echo "-----------------------------------------------------------------"
echo "$(date "+%Y-%m-%d %H:%M") Start Processing....."
##....................................................................##
### Key Parameters
SPECIES='hg38'
Data_Provider='Paul'
Project_Name='Totipotent'
##....................................................................##
### Download Raw Data
#FUNC_Download "ftp://ftp.admerahealth.com/19092-06" "19092-06"

##....................................................................##
### PARALLEL OPERTATION
echo "Parallel Operation have started"
#conda activate py3_lx
for (( i = 0; i <= $(expr ${#__INPUT_SAMPLE_SET[*]} - 1); i++ ))  ### Loop Operation [Ref.1]
do
	PRE_READS_DIR ${__INPUT_PATH} ${__INPUT_SAMPLE_SET[i]} 'fastq.gz' 'SRA'
	RUN_FAST_QC & pid=$!
	RUN_Trim_Galore_QC & pid=$!
	#RUN_BOWTIE2 ${__INPUT_SAMPLE_SET[i]} ${SPECIES} ${Project_Name} ${Data_Provider} 'no' & pid=$!
	#RUN_MACS2 ${__INPUT_PATH} ${__INPUT_SAMPLE_SET[i]} 'Null' ${Project_Name} ${SPECIES} ${Data_Provider} 'bampe' & pid=$!
	#RUN_ROSE_SUPER_Enhancer ${__INPUT_SAMPLE_SET[i]} ${SPECIES} 'customeized' & pid=$!
	#RUN_Peaks_Distribution_Analysis ${__INPUT_SAMPLE_SET[i]} ${SPECIES} & pid=$!
	#RUN_bed2fastq ${__INPUT_SAMPLE_SET[i]} ${SPECIES} & pid=$!
	#RUN_Reads_Profile "GeneBody" ${__INPUT_SAMPLE_Set[i]} ${SPECIES}
	#REMOVE_REDUNDANCY_PICARD ${__INPUT_SAMPLE_SET[i]} & pid=$!
	
	
	PID_LIST+=" $pid";
	#break
#### FOR a full cycle, it must be clear its READS_DIR in the end.
	#echo "Unset DIR sets."
	#unset ${__FASTQ_DIR_R1} ${__FASTQ_DIR_R2}
done

echo "wait ${PID_LIST}....................................."
wait ${PID_LIST}
echo "Parallel Operation have finished";

for (( i = 0; i <= $(expr ${#__INPUT_SAMPLE_SET[*]} - 1); i++ ))  ### Loop Operation [Ref.1]
do
	break
	PRE_READS_DIR ${__INPUT_PATH} ${__INPUT_SAMPLE_SET[i]} 'fq.gz' 'Pair'
	#RUN_Quant_IRI ${__INPUT_PATH} ${__INPUT_SAMPLE_SET[i]} & pid=$!
	#PRE_READS_DIR ${__INPUT_PATH} ${__INPUT_SAMPLE_SET[i]} 'fq.gz' 'Pair'
	RUN_BOWTIE2 ${__INPUT_SAMPLE_SET[i]} ${SPECIES} ${Project_Name} ${Data_Provider} 'no' & pid=$!
	#RUN_MACS2 ${__INPUT_SAMPLE_SET[i]} 'Null' ${Project_Name} ${SPECIES} ${Data_Provider} 'bampe' & pid=$!
	PID_LIST+=" $pid";
done
echo "wait ${PID_LIST}....................................."
wait ${PID_LIST}
echo "Parallel Operation have finished";

##....................................................................##
### Single Operation
	#RUN_CELLRANGER ${__INPUT_SAMPLE_DIR_List[15]} "Hdac" "mm10"
#echo "Single Operation have finished";

##....................................................................##
	echo "End Date: `date`"
	echo -e "\a FINISHED ALERT !"
	
	if [ ${Alert_email} == 0 ];then
	EMAIL_ME "${Start_Date}" ${Process_NAME}
	fi
}
##### Following Line is very IMPORTANT 
main "$@"

#[1] https://stackoverflow.com/questions/10909685/run-parallel-multiple-commands-at-once-in-the-same-terminal
#[2]
#[3]  
